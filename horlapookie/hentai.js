import cloudscraper from 'cloudscraper';
import { load } from 'cheerio';

export const command = {
    name: 'hentai',
    aliases: ['nhentai', 'nsfw'],
    description: 'Send a random hentai image',
    usage: 'hentai',
    category: 'nsfw',
    cooldown: 3,

    async execute(sock, msg, args, context) {
        const { from } = context;

        const getRandomHentaiUrl = () => {
            const base = 'https://nhentai.net';
            const id = Math.floor(Math.random() * 500000) + 100000;
            return `${base}/g/${id}/`;
        };

        const scrapeImage = async (url) => {
            const html = await cloudscraper.get(url, {
                headers: { 'User-Agent': 'Mozilla/5.0' }
            });
            const $ = load(html);
            const title = $('title').text();
            if (title.includes('404') || !$('#cover img').length) throw new Error('Invalid hentai page');
            const img = $('#cover img').attr('data-src') || $('#cover img').attr('src');
            return img.startsWith('http') ? img : `https:${img}`;
        };

        try {
            let imageUrl = '', galleryUrl = '';
            for (let i = 0; i < 10; i++) {
                const url = getRandomHentaiUrl();
                try {
                    imageUrl = await scrapeImage(url);
                    galleryUrl = url;
                    break;
                } catch { continue; }
            }

            if (!imageUrl) {
                await sock.sendMessage(from, {
                    text: '❌ Failed to fetch a valid hentai. Try again later.',
                    quoted: msg
                });
                return;
            }

            await sock.sendMessage(from, {
                image: { url: imageUrl },
                caption: `🔞 *Random Hentai*\n📖 Source: ${galleryUrl}`,
                contextInfo: {
                    externalAdReply: {
                        title: 'NSFW Gallery',
                        body: 'Generated by YourHighness Bot 👑',
                        thumbnailUrl: 'https://picsum.photos/300?random=5',
                        sourceUrl: 'https://github.com',
                        mediaType: 1
                    }
                }
            }, { quoted: msg });

        } catch (error) {
            await sock.sendMessage(from, {
                text: `❌ Error fetching hentai: ${error.message}`,
                quoted: msg
            });
        }
    }
};
