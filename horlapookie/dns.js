export const command = {
    name: 'dns',
    aliases: ['nslookup', 'dig'],
    description: 'DNS lookup information (educational)',
    usage: 'dns <domain>',
    category: 'Ethical Hacking',

    async execute(sock, msg, args, context) {
        const { settings } = context;
        const sender = msg.key.remoteJid;

        if (!args.trim()) {
            await sock.sendMessage(sender, {
                text: 'üåê Please provide a domain!\n\nExample: .dns google.com\n\n‚ö†Ô∏è Educational purposes only!',
                contextInfo: {
                    externalAdReply: {
                        title: 'DNS Lookup',
                        body: 'Domain Name System',
                        thumbnailUrl: settings.profilePics[Math.floor(Math.random() * settings.profilePics.length)],
                        sourceUrl: 'https://github.com',
                        mediaType: 1,
                        renderLargerThumbnail: false
                    }
                }
            });
            return;
        }

        const domain = args.trim();

        try {
            await sock.sendMessage(sender, {
                text: `üåê *DNS Lookup Information*\n\nüéØ Domain: ${domain}\n\nüìä *DNS Record Types:*\n‚Ä¢ A: IPv4 address\n‚Ä¢ AAAA: IPv6 address\n‚Ä¢ CNAME: Canonical name\n‚Ä¢ MX: Mail exchange\n‚Ä¢ NS: Name server\n‚Ä¢ TXT: Text records\n‚Ä¢ SOA: Start of authority\n\nüîç *Common DNS commands:*\n‚Ä¢ nslookup ${domain}\n‚Ä¢ dig ${domain}\n‚Ä¢ dig ${domain} MX\n‚Ä¢ dig ${domain} NS\n‚Ä¢ host ${domain}\n\nüìù *Information gathering uses:*\n‚Ä¢ Subdomain enumeration\n‚Ä¢ Mail server discovery\n‚Ä¢ Name server identification\n‚Ä¢ Infrastructure mapping\n\nüõ°Ô∏è *DNS Security:*\n‚Ä¢ DNS poisoning\n‚Ä¢ DNS tunneling\n‚Ä¢ DNS amplification attacks\n‚Ä¢ DNSSEC validation\n\n‚ö†Ô∏è *Educational Purpose Only*\nThis command provides information about DNS lookup for learning cybersecurity concepts.`,
                contextInfo: {
                    externalAdReply: {
                        title: 'DNS Lookup',
                        body: 'Educational information',
                        thumbnailUrl: settings.profilePics[Math.floor(Math.random() * settings.profilePics.length)],
                        sourceUrl: 'https://github.com',
                        mediaType: 1,
                        renderLargerThumbnail: false
                    }
                }
            });
            });

        } catch (error) {
            await sock.sendMessage(sender, {
                text: `‚ùå **DNS Lookup Failed**\n\nüéØ Domain: ${domain}\nüí• Error: ${error.message}\n\nüí° **Possible causes:**\n‚Ä¢ Invalid domain name\n‚Ä¢ Domain doesn't exist\n‚Ä¢ DNS server timeout\n‚Ä¢ Network connectivity issues\n\nüîß **Try:**\n‚Ä¢ Check domain spelling\n‚Ä¢ Use a different DNS server\n‚Ä¢ Try again later`,
                contextInfo: {
                    externalAdReply: {
                        title: '‚ùå DNS Lookup Error',
                        body: 'Failed to resolve domain',
                        thumbnailUrl: settings.profilePics[Math.floor(Math.random() * settings.profilePics.length)],
                        sourceUrl: 'https://github.com',
                        mediaType: 1,
                        renderLargerThumbnail: false
                    }
                }
            });
        }
    }
};